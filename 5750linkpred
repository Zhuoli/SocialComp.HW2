#!/usr/bin/python
import sys
sys.path.append('./networkx')
import basNetPredict as net
import time
start = time.time()
# get edgelist
# get directed graph
nodes,edgeHash,outHash,inHash,nbrsHash = net.parsefile(sys.argv)
# number
number = int(sys.argv[2])
#print 'edgelist2graph done time: ' + str(time.time() - start)
#print 'nodes size: ' + str(len(nodes))
#print 'edges size: ' + str(len(edgelist))
# get the prediction buffer using Jaccard's coefficient method
#buffers = net.predictorAtCoefficient(nodes,edgeHash,inHash,outHash,nbrsHash)
#print 'prediction done time: ' + str(time.time() - start)
# get the prediction buffer using common neibhbors method
buffers = net.predictorAtCommonNeighbors(nodes,edgeHash,inHash,outHash,nbrsHash)
#print 'prediction size at common neighbors method is:\n ' + str(len(buffersOfCN))

# get best n maches
bestmatches,number = net.getBestMaches(buffers, number)
#print 'bestmatch done time: ' + str(time.time() - start)
# print prediction
net.prints(bestmatches)
#net.debugPrints(bestmatches)
